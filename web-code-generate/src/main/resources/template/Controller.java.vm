package ${package}.${moduleName}.controller;

import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.plugins.Page;
import com.wlgroup.api.admin.annotation.SysLog;
import com.wlgroup.core.model.response.ObjectCollectionResponse;
import com.wlgroup.core.model.response.ObjectDataResponse;
import ${package}.${moduleName}.entity.${className}DO;
import ${package}.${moduleName}.service.${className}Service;


import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;




/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(value = "${comments}")
@RestController
@RequestMapping(value = "/api/v1/${moduleName}/${pathName}", produces = { MediaType.APPLICATION_JSON_UTF8_VALUE }, consumes = { MediaType.APPLICATION_JSON_UTF8_VALUE })
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classname}Service;
	
	/**
	 * 分页列表
	 */
	@RequestMapping(value = "/page", method = RequestMethod.GET, consumes = MediaType.ALL_VALUE)
	@RequiresPermissions("${moduleName}:${pathName}:list")
	@ApiImplicitParams({ @ApiImplicitParam(name = "pageNum", value = "页码", required = false, example = "1", paramType = "query", dataType = "int", defaultValue = "1"),
                         @ApiImplicitParam(name = "pageSize", value = "单页返回的记录条数,如果未传则不分页", required = false, example = "40", paramType = "query", dataType = "int")})
    public @ResponseBody ObjectCollectionResponse<${classname}DO> coupons(@RequestParam(name = "pageNum", required = false, defaultValue = "1") Integer pageNum,
                                                                     @RequestParam(name = "pageSize", required = false, defaultValue = "10") Integer pageSize) {
		//查询列表数据
        Page<Coupon> page = new Page<Coupon>(pageNum, pageSize);
		page.setTotal(this.selectCount(wrapper));
 		page.setAsc(false);
        page.setOrderByField("create_time");

        Page<${className}DO> result = ${classname}Service.selectPage(page, null);
        return new ObjectCollectionResponse<>(result.getRecords(), result.getTotal());
	}
	
	
	/**
	 * 详情信息
	 */
	@RequestMapping("/info/{${pk.attrname}}")
	@RequiresPermissions("${moduleName}:${pathName}:info")
	public ObjectDataResponse<${classname}DO> info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}DO ${classname} = ${classname}Service.selectDtoById(${pk.attrname});
		return new ObjectDataResponse<>(${classname});
	}
	
	/**
	 * 保存或更新
	 */
	@SysLog("新增/编辑${comments}")
    @ApiOperation(value = "保存优惠券", notes = "id为空则新增，不为空则更新")
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public ObjectDataResponse<Void> save(@Valid @RequestBody ${className}DO request,
                                         BindingResult bindingResult) {
       ${classname}Service.insert(request);
        return new ObjectDataResponse<Void>(null);
    }
	
	
	/**
	 * 删除
	 */
	@SysLog("删除${comments}")
	@RequestMapping("/delete")
	@RequiresPermissions("${moduleName}:${pathName}:delete")
	public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.deleteBatchIds(${pk.attrname}s);
		return new ObjectDataResponse<Void>(null);
	}
	
}
